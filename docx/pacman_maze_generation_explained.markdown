# Pac-Man 迷宮生成邏輯詳解

## 什麼是 Pac-Man 迷宮？

Pac-Man 迷宮是一個由格子組成的矩形區域，每個格子可以是以下幾種類型之一：
- **路徑**：Pac-Man 和鬼魂可以移動的空地。
- **牆壁**：阻擋移動的障礙物。
- **邊界**：迷宮四周的不可穿越區域，防止角色離開地圖。
- **能量球**：Pac-Man 吃掉後能暫時讓鬼魂變得脆弱的特殊道具。
- **鬼魂重生點**：鬼魂開始或重生的位置，通常位於迷宮中央。
- **門**：限制鬼魂進出的特殊格子，Pac-Man 可以自由通過。

迷宮的特點是**左右對稱**，這意味著迷宮的左半部分和右半部分像鏡子一樣對應。這種對稱性不僅美觀，還能讓玩家更容易理解地圖結構。

## 迷宮生成的主要步驟

生成迷宮的過程可以分為以下五個主要步驟，每一步都為迷宮增添特定的結構或元素：
1. **初始化迷宮和邊界**：創建一個空的迷宮，設置四周的邊界。
2. **添加中央房間**：在迷宮中央創建一個 5x5 的房間，用於鬼魂重生。
3. **生成牆壁**：在迷宮左半部分隨機生成牆壁，確保路徑連通且無死路。
4. **縮窄路徑**：將寬敞的路徑區域縮小，增加迷宮的複雜度。
5. **放置能量球**：在迷宮中均勻分佈能量球，確保遊戲平衡。

最終，左半部分的結構會被鏡像到右半部分，完成對稱迷宮的生成。以下詳細解釋每個步驟。

---

### 步驟 1：初始化迷宮和邊界

**目的**：創建一個空的迷宮，並設置四周的邊界，確保角色不會跑出地圖。

**怎麼做**：
- **創建網格**：假設迷宮的尺寸是寬度（例如 28 格）和高度（例如 31 格）。程式會創建一個由這些格子組成的矩形區域，初始時所有格子都設為**路徑**（空的、可走的地方）。
- **設置邊界**：將迷宮的最外圍一圈格子設為**邊界**，就像給迷宮畫一個框。這些邊界是不可穿越的，防止 Pac-Man 或鬼魂跑到地圖外面。
- **隨機種子**：如果提供了「種子」（一個數字），程式會用它來控制隨機選擇的過程，這樣每次用同一個種子生成的迷宮都一樣。這對於測試或重現特定迷宮很有用。

**為什麼這樣做**：邊界確保了遊戲的範圍清晰，初始全路徑的設計為後續添加牆壁提供了空白畫布。

**簡單比喻**：就像你在畫紙上畫一個大矩形，然後在邊緣塗上黑框，表示這裡不能走，裡面全是空的草地，準備在上面蓋房子（牆壁）。

---

### 步驟 2：添加中央房間

**目的**：在迷宮中央創建一個 5x5 的房間，作為鬼魂的「家」，並設置相關的特殊格子。

**怎麼做**：
- **房間結構**：程式在迷宮的正中央（通過計算迷宮寬度和高度的中心點）放置一個 5x5 的格子區域。這個房間包含：
  - **鬼魂重生點**：位於房間中心，鬼魂從這裡開始或被吃掉後回到這裡。
  - **門**：位於房間的入口，鬼魂進出時會受到限制，但 Pac-Man 可以自由通過。
  - **牆壁和路徑**：房間四周有一些牆壁，形成一個封閉但有出入口的結構。
- **檢查尺寸**：如果迷宮太小（寬或高小於 7 格），無法放入這個 5x5 房間，程式會報錯並停止。
- **精確放置**：房間的左上角坐標是根據迷宮尺寸計算的，確保它正好位於中心。

**為什麼這樣做**：中央房間是 Pac-Man 遊戲的核心元素，鬼魂需要一個固定的起點，而房間的結構讓遊戲開始時鬼魂的行為可控。

**簡單比喻**：在草地中央蓋一個小房子，房子裡有鬼魂的「床」（重生點），門口有柵欄（門），Pac-Man 可以隨便進出，但鬼魂得慢慢走出去。

---

### 步驟 3：生成牆壁

**目的**：在迷宮的左半部分隨機生成牆壁，形成有趣的路徑，同時確保迷宮連通（沒有到不了的地方）且無死路（三面被堵的格子）。

**怎麼做**：
- **隨機選擇起點**：程式在迷宮的左半部分（寬度的一半以內）找一個格子，這個格子必須滿足：
  - 它周圍的 3x3 區域（九宮格）全是路徑。
  - 它附近 5x5 區域內有牆壁或邊界（確保牆壁不會太孤立）。
- **設置牆壁**：將選中的格子設為**臨時牆壁**（一個中間狀態，方便後續調整）。
- **擴展牆壁**：以高概率（預設 99%）向上下左右隨機方向擴展牆壁，生成連續的牆壁。每擴展一步，程式會檢查：
  - 新牆壁是否會造成死路（三面被堵的路徑）。
  - 連續牆壁的長度是否超過 3 格（避免過長的牆壁）。
  - 周圍是否已經有其他牆壁（避免牆壁太密集）。
- **回退機制**：如果擴展導致問題（例如死路），程式會把新牆壁改回路徑，換個方向再試，最多試 20 次。如果試太多次還不行，就放棄這個擴展。
- **限制次數**：整個牆壁生成過程最多嘗試 1000 次，防止程式跑太久。
- **連通性檢查**：程式用「洪水填充」演算法（想像水從一個格子流到所有連通的格子）檢查迷宮是否仍然連通，確保 Pac-Man 能到達所有路徑。

**為什麼這樣做**：隨機生成的牆壁讓迷宮每次都不一樣，增加遊戲的變化性。檢查死路和連通性保證了迷宮可玩，玩家不會被卡住。

**簡單比喻**：在草地上隨機放磚塊（牆壁），每次放之前看看旁邊是不是太空曠，然後試著往旁邊多放幾塊磚，但不能把路完全堵死，也不能讓某個角落變成只有一條路的死胡同。

---

### 步驟 4：縮窄路徑

**目的**：將迷宮中寬敞的 2x2 路徑區域縮小，增加迷宮的複雜度和挑戰性。

**怎麼做**：
- **找 2x2 路徑塊**：程式掃描迷宮，找出所有 2x2 的區域（四個格子全是路徑）。
- **隨機選擇**：從這些 2x2 塊中隨機挑一個。
- **嘗試放牆壁**：在這個 2x2 塊的四個格子中，隨機選一個設為牆壁，然後檢查：
  - 放了牆壁後，周圍 3x3 區域是否會出現死路。
  - 這個牆壁連通的牆壁數量是否不超過 5 格（避免牆壁太密集）。
  - 這個格子是否「適合縮窄」（它的對角格子屬於同一組牆壁，防止破壞結構）。
- **接受或回退**：如果檢查通過，保留這個牆壁，否則改回路徑，試另一個格子。如果四個格子都不行，就換下一個 2x2 塊。
- **重複執行**：不斷重複這個過程，直到找不到更多 2x2 路徑塊或嘗試了 1000 次。

**為什麼這樣做**：寬敞的路徑讓遊戲太簡單，縮窄路徑能讓玩家需要更多策略，同時保持迷宮的美觀和連通性。

**簡單比喻**：在草地上的大片空地中，隨機放一塊磚頭，讓空地變小，但要確保放磚頭後不會把旁邊的路堵成死路。一直放，直到空地都變得比較窄。

---

### 步驟 5：放置能量球

**目的**：在迷宮中均勻放置能量球，作為 Pac-Man 的重要道具，確保它們分佈合理，不太密集也不太稀疏。

**怎麼做**：
- **收集候選格子**：找出所有路徑格子，但排除鬼魂重生點及其周圍的格子（避免能量球太靠近鬼魂）。
- **計算數量**：根據路徑格子的總數，決定能量球的數量（最少 4 個，最多 16 個，約佔路徑的 10%）。
- **分網格放置**：
  - 將迷宮分成 5x5 的小網格（根據迷宮大小調整）。
  - 計算每個網格的中心點（平均坐標）。
  - 選擇分佈最均勻的網格（網格間距離最大化），在每個選中的網格中隨機挑一個路徑格子放能量球。
- **補充剩餘**：如果網格放置的能量球不夠數量，隨機從其他路徑格子中補充。
- **獨立種子**：能量球的放置用一個獨立的隨機種子（原種子加 1000），確保它們的位置與牆壁生成無關，但仍可重現。

**為什麼這樣做**：能量球是遊戲的關鍵道具，均勻分佈讓玩家有機會在不同區域找到它們，增加遊戲的策略性。

**簡單比喻**：在草地上撒糖果（能量球），先把草地分成小塊，每塊挑個地方放一顆糖果，確保糖果之間不要太近。如果糖果不夠多，就隨機補幾顆，但不能放在鬼魂的房子附近。

---

### 最後一步：鏡像到右半部分

**目的**：將左半部分的迷宮結構複製到右半部分，實現左右對稱。

**怎麼做**：
- 程式遍歷左半部分（寬度的一半以內）的每個格子，將它的圖塊類型（路徑、牆壁、能量球等）複製到右半部分的對應位置。
- **對稱公式**：對於左半部分的格子 (x, y)，右半部分的對應格子是 (width - 1 - x, y)。例如，如果迷宮寬 28，左邊的 (3, 5) 對應右邊的 (24, 5)。
- 這一步在所有牆壁、路徑和能量球都生成後執行，確保整個迷宮對稱。

**為什麼這樣做**：對稱迷宮讓遊戲地圖更美觀，玩家也更容易記住路徑，符合經典 Pac-Man 的設計。

**簡單比喻**：把草地左邊蓋好的房子和放好的糖果，像照鏡子一樣複製到右邊，讓兩邊看起來一模一樣。

---

## 為什麼要避免死路和確保連通性？

- **死路**：如果一個路徑格子三面被牆壁或邊界包圍，Pac-Man 進去後只能原路返回，這會讓遊戲變得無趣或讓玩家感到受困。因此，程式在生成牆壁和縮窄路徑時，會檢查周圍是否會形成死路。
- **連通性**：迷宮的所有路徑必須連通，意味著 Pac-Man 從任何一個路徑格子都能走到其他路徑格子。程式用洪水填充演算法檢查這一點，確保不會因為牆壁把迷宮分成不連通的區域。

**簡單比喻**：死路就像公園裡只有一個入口的小角落，進去後沒別的路可走，無聊又浪費時間。連通性就像確保公園裡每條小路都能通到其他地方，玩家可以自由探索。

---

## 程式如何確保迷宮可重現？

程式使用一個「隨機種子」來控制所有隨機選擇（例如選哪個格子放牆壁或能量球）。如果用同一個種子，程式每次生成的迷宮都會一模一樣。這對於：
- **測試**：開發者可以用固定種子檢查迷宮是否符合要求。
- **遊戲設計**：確保玩家在特定關卡看到相同的迷宮。

但能量球的放置用了一個不同的種子（原種子加 1000），這樣即使牆壁結構相同，能量球的位置也可能不同，增加了一些變化性。

**簡單比喻**：種子就像食譜，每次用同樣的食譜（種子），做出來的蛋糕（迷宮）都一樣。如果稍微改一點配料（用不同種子），蛋糕的裝飾（能量球）會不一樣。

---

## 總結

Pac-Man 迷宮的生成是一個精心設計的過程，結合了隨機性和規則，確保迷宮既有變化又有可玩性。以下是生成流程的簡要回顧：
1. 初始化一個全是路徑的迷宮，設置邊界。
2. 在中央添加 5x5 的鬼魂房間。
3. 在左半部分隨機生成牆壁，確保無死路且連通。
4. 縮窄寬敞的路徑，增加複雜度。
5. 均勻放置能量球，作為遊戲道具。
6. 將左半部分鏡像到右半部分，完成對稱迷宮。

通過這些步驟，程式生成了一個既美觀又具挑戰性的 Pac-Man 迷宮，讓玩家可以享受經典的遊戲體驗。

**最終比喻**：生成迷宮就像設計一個遊樂園，先畫好外圍的圍欄，蓋一個中央的鬼屋，然後隨機鋪設小路和牆壁，確保路不通死胡同，再撒上糖果讓遊客開心，最後把左邊的設計照鏡子複製到右邊，打造一個對稱又好玩的樂園！
